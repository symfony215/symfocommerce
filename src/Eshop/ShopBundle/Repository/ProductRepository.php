<?php

namespace Eshop\ShopBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function findBySlug($slug)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('p')
            ->from('ShopBundle:Product', 'p')
            ->where('p.slug = :slug')
            ->setParameter('slug', $slug)
            ->getQuery()
            ->getSingleResult();
    }

    //query for pagination without "getQuery()"
    public function findByCategoryForPaginator($category)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select(array('p', 'pi', 'pm'))
            ->from('ShopBundle:Product', 'p')
            ->innerJoin('p.category', 'ca')
            ->leftJoin('p.images', 'pi')
            ->leftJoin('p.measure', 'pm')
            ->where('ca = :category')
            ->andWhere('p.quantity <> 0')
            ->setParameter('category', $category)
            ;
    }

    //query for pagination without "getQuery()"
    public function findByManufacturerForPaginator($manufacturer)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select(array('p', 'pi', 'pm'))
            ->from('ShopBundle:Product', 'p')
            ->innerJoin('p.manufacturer', 'ma')
            ->leftJoin('p.images', 'pi')
            ->leftJoin('p.measure', 'pm')
            ->where('ma.id = :manufacturer')
            ->andWhere('p.quantity <> 0')
            ->setParameter('manufacturer', $manufacturer
            );
    }
}
